# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
  # Shell is non-interactive.  Be done now!
  return
fi

# Exports
test -d ${HOME}/.local/bin && PATH="${HOME}/.local/bin:${PATH}"
test -d ${HOME}/bin && PATH="${HOME}/bin:${PATH}"
export PATH

export GOPATH=$HOME/.local/share/go
[ -d $GOPATH ] || mkdir -p $GOPATH

export XDG_DATA_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}"
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-${HOME}/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-${HOME}/.cache}"

mkdir -p ${XDG_DATA_HOME}
mkdir -p ${XDG_CONFIG_HOME}
mkdir -p ${XDG_CACHE_HOME}

# Functions
FUNCTIONS_DIR="${XDG_CONFIG_HOME}/functions"
if [ -d "${FUNCTIONS_DIR}" ]; then
  for function_file in $(ls -1 ${FUNCTIONS_DIR}/*.sh); do
    . "${function_file}"
  done
fi

# Aliases
ALIASES_DIR="${XDG_CONFIG_HOME}/aliases"
if [ -d "${ALIASES_DIR}" ]; then
  for alias_file in $(ls -1 ${ALIASES_DIR}/*.aliases); do
    . "${alias_file}"
  done
fi

## History
HISTSIZE=1000000
SAVEHIST=${HISTSIZE} # for zsh
HISTFILE="${XDG_CACHE_HOME}/$(get_shell_name)/history"
mkdir -p "$(dirname $HISTFILE)"

# Editor
has nvim && export EDITOR='nvim'
# Man pager
has nvim && export MANPAGER='nvim +Man!'

# Init starship - modern shell prompt
has starship && eval "$(starship init $(get_shell_name))"

# Init zoxide - modern cd
has zoxide && eval "$(zoxide init $(get_shell_name))"

# Enable direnv
has direnv && eval "$(direnv hook $(get_shell_name))"

# Init keychain
if has keychain; then
  keychain ${HOME}/.ssh/id_ed25519 ${HOME}/.ssh/id_rsa_mcp-scale-jenkins ${HOME}/.ssh/id_rsa_alovtsov-generated 2>/dev/null
  . ${HOME}/.keychain/$(hostname -s)-sh
  #. ${HOME}/.keychain/$(hostname -s)-sh-gpg
fi

# Check that process exists by sending 0 signal
#if pkill -0 -u $(id -u) -f gnome-keyring-daemon; then
#  export  $(gnome-keyring-daemon --start)
#fi

# Load zsh configs
if [ $(get_shell_name) = "zsh" ]; then
  ZDOTDIR="${HOME}/.config/zsh"
fi

# Add icons to lf (file manager)
has lf && [ -f "${XDG_CONFIG_HOME}/lf/icons" ] && source "${XDG_CONFIG_HOME}/lf/icons"

# File and Dir colors for ls and other outputs
export LS_OPTIONS='--color=auto'
eval "$(dircolors -b)"
