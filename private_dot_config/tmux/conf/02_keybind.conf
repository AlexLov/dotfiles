# Global rebuind
# vim: noet
#
#unbind-key C-t
#set-option -g prefix C-t
set-option -g prefix M-Space

# Last pane
bind-key M-a last-pane
bind-key M-Space last-pane

# Reload config
bind-key r source-file ~/.config/tmux/tmux.conf

## Spliting panes
bind-key "|" split-window -h -c "#{pane_current_path}"			# Split vertically
bind-key "\\" split-window -fh -c "#{pane_current_path}"		# Make a split vertically with full width
bind-key "-" split-window -v -c "#{pane_current_path}"			# Split horizontally
bind-key "_" split-window -fv -c "#{pane_current_path}"			# Make a split horizontally with full height
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

## Swapping windows
bind-key -r "<" swap-window -t -1	## moves current window one position to the left
bind-key -r ">" swap-window -t +1	## moves current window one position to the right

# y and p as in vim
bind-key Escape copy-mode
bind-key -n M-Escape copy-mode
bind-key -n M-PageUp copy-mode -u
bind-key -T copy-mode-vi -n M-PageDown send -X page-down
unbind-key p
bind-key p paste-buffer
bind-key -n M-p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up
bind-key -T copy-mode-vi 'Escape' send -X cancel

#### Use tmux like i3/sway
bind-key -n M-Tab			last-window
bind-key -n C-M-Tab		switch-client -l
#bind-key -n C-M-Tab		last-pane -Z
bind-key -n M-f				resize-pane -Z		# Zoom pane


## Switch to pane via Alt + Arrow
bind-key -n M-Left	select-pane -L
bind-key -n M-Right	select-pane -R
bind-key -n M-Up		select-pane -U
bind-key -n M-Down	select-pane -D
# Actual for split workman kbd layout
bind-key -n M-m			select-pane -L
bind-key -n M-i 		select-pane -R
bind-key -n M-e			select-pane -U
bind-key -n M-n			select-pane -D
## Swap panes via Alt + Shift + Arrow
bind-key -n S-M-Left	swap-pane -s '{left-of}'
bind-key -n S-M-Right	swap-pane -s '{right-of}'
bind-key -n S-M-Up		swap-pane -s '{up-of}'
bind-key -n S-M-Down	swap-pane -s '{down-of}'
# Actual for split colemak kbd layout
bind-key -n M-M			swap-pane -s '{left-of}'
bind-key -n M-I 		swap-pane -s '{right-of}'
bind-key -n M-E			swap-pane -s '{up-of}'
bind-key -n M-N			swap-pane -s '{down-of}'
## Spliting panes
bind-key -n M-"|" split-window -h -c "#{pane_current_path}"			# Split vertically
bind-key -n M-"\\" split-window -fh -c "#{pane_current_path}"		# Make a split vertically with full width
bind-key -n M-"-" split-window -v -c "#{pane_current_path}"			# Split horizontally
bind-key -n M-"_" split-window -fv -c "#{pane_current_path}"		# Make a split horizontally with full height
## Select window aka workspace
bind-key -n M-1			if-shell "tmux select-window -t :1" "" "new-window -t :1"
bind-key -n M-2			if-shell "tmux select-window -t :2" "" "new-window -t :2"
bind-key -n M-3			if-shell "tmux select-window -t :3" "" "new-window -t :3"
bind-key -n M-4			if-shell "tmux select-window -t :4" "" "new-window -t :4"
bind-key -n M-5			if-shell "tmux select-window -t :5" "" "new-window -t :5"
bind-key -n M-6			if-shell "tmux select-window -t :6" "" "new-window -t :6"
bind-key -n M-7			if-shell "tmux select-window -t :7" "" "new-window -t :7"
bind-key -n M-8			if-shell "tmux select-window -t :8" "" "new-window -t :8"
bind-key -n M-9			if-shell "tmux select-window -t :9" "" "new-window -t :9"
# Actual for split workman kbd layout
bind-key -n M-t			if-shell "tmux select-window -t :1" "" "new-window -t :1"
bind-key -n M-s			if-shell "tmux select-window -t :2" "" "new-window -t :2"
bind-key -n M-r			if-shell "tmux select-window -t :3" "" "new-window -t :3"
bind-key -n M-a			if-shell "tmux select-window -t :4" "" "new-window -t :4"

# Choose session to switch
bind-key -n M-C-s			choose-tree -Zs

#bind-key -n M-: popup -E -w 100 -h 3 -b rounded -S 'fg=blue'

# Run btop in popup window
bind -n M-C-b if-shell -F '#{==:#{session_name},floating}' {
	detach-client
} {
	popup -E -x '#{window_width}' -w 50% -h 90% -B 'tmux new -A -D -s floating \; new-window -S -n btop btop -p 2'
}
# Example of using another keybinding to execute another programm in different window on floating session
bind -n M-C-t if-shell -F '#{==:#{session_name},floating}' {
	detach-client
} {
	if-shell -F '#{==:#{session_name},mirantis}' {
		popup -d '#{pane_current_path}' -E -x '#{window_width}' -w 30% -h 90% -b rounded \
			-S 'fg=blue' 'tmux new -A -D -s floating\; new-window -S -n mirantis-TODO nvim ~/mirantis/TODO'
	} {
		if-shell -F '#{==:#{session_name},360dialog}' {
			popup -d '#{pane_current_path}' -E -x '#{window_width}' -w 30% -h 90% -b rounded \
				-S 'fg=blue' 'tmux new -A -D -s floating\; new-window -S -n 360dialog-TODO nvim ~/360dialog/TODO'
		} {
			popup -d '#{pane_current_path}' -E -x '#{window_width}' -w 30% -h 90% -b rounded \
				-S 'fg=blue' 'tmux new -A -D -s floating\; new-window -S -n TODO nvim ~/.config/TODO'
		}
	}
}

#bind-key -n C-M-Tab run-shell 'tmux switch-client -t "$(cat $tmux_previous_session_name_file)"'

# TODO review and adapt, taken from https://www.reddit.com/r/tmux/comments/itonec/comment/g5jxke4/
#bind ! if-shell -F '#{!=:#{session_name},floating}' {
#		break-pane
#} {
#		run-shell 'bash -c "tmux break-pane -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
#}
#
#bind @ if-shell -F '#{!=:#{session_name},floating}' {
#		break-pane -d
#} {
#		run-shell 'bash -c "tmux break-pane -d -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
#}
